sudo: required
cache: pip

services:
    - docker

env:
    matrix:
        - JOB_TYPE=compile_and_integration_tests_fast
        - JOB_TYPE=compile_and_integration_tests_slow
        - JOB_TYPE=compile_and_integration_tests_amz_s3

    global:
        TEST_BRANCH: $TRAVIS_BRANCH

before_install:
    - sudo apt-get -qq update && sudo apt-get -qq install -y e2tools
    - pip2.7 install -U --user paramiko fabric PyYAML pytest requests pytest-xdist filelock
#    - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-engine

before_script:
    # Rename the branch we're on, so that it's not in the way for the
    # subsequent fetch. It's ok if this fails, it just means we're not on any
    # branch.
    - git branch -m temp-branch || true
    # Git trick: Fetch directly into our local branches instead of remote
    # branches.
    - git fetch origin 'refs/heads/*:refs/heads/*'
    # Get last remaining tags, if any.
    - git fetch --tags origin

    - git clone git://github.com/mendersoftware/mendertesting

script:
    # Check commit compliance.
    - mendertesting/check_commits.sh

    - if [ "$JOB_TYPE" = compile_and_integration_tests_fast ]; then ( cd tests && bash run.sh --runfast ); fi

    - if [ "$JOB_TYPE" = compile_and_integration_tests_slow ]; then
        ( cd tests && bash run.sh --runslow );
      fi

    - if [[ "$JOB_TYPE" = compile_and_integration_tests_amz_s3 ]] && [[ -n $AWS_ACCESS_KEY_ID ]] && [[ -n $AWS_SECRET_ACCESS_KEY ]]; then
        ( cd tests && bash run.sh --runs3 );
      fi

    # CRON JOB SECTION
    - if [ "$TRAVIS_EVENT_TYPE" = "cron" ]; then ( cd tests && bash run.sh --runnightly ); fi

notifications:
    slack:
        secure: l831fv7p5iskdhG082XVdi5UBhYXEZyRn0ZgEfPWqLfqCj5FyxC36KaYiQo+vp8BS9vX0JFEOuZ4PiKjG3+jSEsJIk0Lx/1fjCg1zi13xfzI2ke1BWGuBT5tuz+nKj3TujfnHM0KE8Ix8GkwnamR388DO0FtgJrhEMBylo33zVV5ZESBa3B2bwUfWgfFF7VeUeqtDnOiHFDqsu2A4lOmMMJPp8k+71x0qvUsUStswrG11S0UhDReuuH1+siy3/bDEnrZIwEBvSM8DxdLLWC/SmCiCMdCU95GfzFRJsZN+2+KavCN8kXxvOG8rYrr8EhOLF4BbGDTJI9Dw+4H4OKOD/Bf+hr1OqYxpGtJxKzGWVlds1MwjjxklWlXopgIfwIZtmgC2RynLEw7LYHMcmBmr2+zjbvl0LZqWto1/G+la3J45rNaXawJtwY2RJ+c5jkm13BoYbOpUAg2SZ7WwW6frW6XdObiegpBfObSapAIEwMHeCSYvZbDPfhv0PFgGS9BQwJ+bz0PY1xoY45EaglnLt8zhcG3pfzXMo7jHFwIcP9/NGi7SO71lL4uhmcYn29PhRoIBMg/gjq7doycCfBWyUQrjGBOhDHzpq01TazxakDussWCSQ534ZwWrksI1d9ONMyikNOFXBkSHsqihYrNF+sLAtGEtHg0Ww7qRc0P/R0=
        on_success: always
        on_failure: always

