# This file is basically a merge of docker-compose.yml, docker-compose.demo.yml
# and docker-compose.storage.minio.yml, as they appeared when this file was
# written.

version: '2.1'
services:

    #
    # mender-iot-manager
    #
    mender-iot-manager-2:
        image: mendersoftware/iot-manager:staging
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender-failover:
                aliases:
                    - mender-iot-manager
        depends_on:
            - mender-mongo-2
        labels:
            mender.healthcheck.path: "/api/internal/v1/iot-manager/health"
        command: server --automigrate

    #
    # mender-deployments
    #
    mender-deployments-2:
        image: registry.mender.io/mendersoftware/deployments-enterprise:staging
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender-failover:
                aliases:
                    - mender-deployments
        depends_on:
            - mender-mongo-2
        labels:
            mender.healthcheck.path: "/api/internal/v1/deployments/health"
        command: server --automigrate
        volumes:
            - ./cert/cert.crt:/etc/ssl/certs/docker.mender.io.crt
        environment:
            STORAGE_BACKEND_CERT: /etc/ssl/certs/docker.mender.io.crt
            DEPLOYMENTS_AWS_AUTH_KEY: minio
            DEPLOYMENTS_AWS_AUTH_SECRET: minio123
            DEPLOYMENTS_AWS_URI: http://minio:9000
            DEPLOYMENTS_AWS_EXTERNAL_URI: https://s3.docker.mender.io

    #
    # mender-gui
    #
    mender-gui-2:
        image: mendersoftware/gui:staging
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender-failover:
                aliases:
                    - mender-gui
        environment:
            - GATEWAY_IP
            - INTEGRATION_VERSION
            - MENDER_ARTIFACT_VERSION
            - MENDER_VERSION
            - MENDER_DEB_PACKAGE_VERSION

    #
    # mender-api-gateway
    #
    mender-api-gateway-2:
        image: traefik:v2.8
        extends:
            file: common.yml
            service: mender-base
        # Enables the web UI and tells Traefik to listen to docker
        command: 
            - --accesslog=true
            - --entrypoints.http.address=:80
            - --entrypoints.http.http.redirections.entryPoint.scheme=https
            - --entrypoints.http.http.redirections.entryPoint.to=https
            - --entrypoints.https.address=:443
            - --entryPoints.https.transport.respondingTimeouts.idleTimeout=7200
            - --entryPoints.https.transport.respondingTimeouts.readTimeout=7200
            - --entryPoints.https.transport.respondingTimeouts.writeTimeout=7200
            - --providers.file.directory=/etc/traefik/config
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock:ro
            # Dynamic configuration files
            - ./extra/failover-testing/traefik.yaml:/etc/traefik/config/traefik.yaml:ro
            - ./config/traefik/traefik.middlewares.yaml:/etc/traefik/config/traefik.middlewares.yaml:ro
            - ./config/traefik/traefik.minio.yaml:/etc/traefik/config/traefik.minio.yaml:ro
            - ./config/traefik/traefik.tls.yaml:/etc/traefik/config/traefik.tls.yaml:ro
            - ./cert/cert.crt:/etc/traefik/certs/cert.crt
            - ./cert/private.key:/etc/traefik/certs/private.key

        networks:
            mender:
                aliases:
                    - failover.docker.mender.io
                    - failover.s3.docker.mender.io
            mender-failover:
                aliases:
                    - mender-api-gateway
                    - docker.mender.io
                    - s3.docker.mender.io
        # critical - otherwise nginx may not detect
        # these servers and exits with 'upstream server not found'
        depends_on:
            - mender-device-auth-2
            - mender-gui-2
            - mender-useradm-2
            - mender-inventory-2
        environment:
            STORAGE_URL: ${STORAGE_URL:-s3.docker.mender.io}

    #
    # mender-device-auth
    #
    mender-device-auth-2:
        image: registry.mender.io/mendersoftware/deviceauth-enterprise:staging
        command: server --automigrate
        volumes:
            - ./keys/deviceauth/private.key:/etc/deviceauth/rsa/private.pem
        environment:
            DEVICEAUTH_SERVER_PRIV_KEY_PATH: /etc/deviceauth/rsa/private.pem
            DEVICEAUTH_ORCHESTRATOR_ADDR: http://mender-workflows-server:8080/
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender-failover:
                aliases:
                    - mender-device-auth
        depends_on:
            - mender-mongo-2
            - mender-workflows-server-2
        labels:
            mender.healthcheck.path: "/api/internal/v1/devauth/health"

    #
    # mender-inventory
    #
    mender-inventory-2:
        image: registry.mender.io/mendersoftware/inventory-enterprise:staging
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender-failover:
                aliases:
                    - mender-inventory
        depends_on:
            - mender-mongo-2
        labels:
            mender.healthcheck.path: "/api/internal/v1/inventory/health"
        command: server --automigrate

    #
    # mender-useradm
    #
    mender-useradm-2:
        image: registry.mender.io/mendersoftware/useradm-enterprise:staging
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender-failover:
                aliases:
                    - mender-useradm
        depends_on:
            - mender-mongo-2
        labels:
            mender.healthcheck.path: "/api/internal/v1/useradm/health"
        command: server --automigrate
        volumes:
            - ./keys/useradm/private.key:/etc/useradm/rsa/private.pem
        environment:
            USERADM_SERVER_PRIV_KEY_PATH: /etc/useradm/rsa/private.pem

    #
    # mender-workflows-server
    #
    mender-workflows-server-2:
        image: registry.mender.io/mendersoftware/workflows-enterprise:staging
        environment:
            WORKFLOWS_MONGO_URL: mongodb://mender-mongo:27017
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender-failover:
                aliases:
                    - mender-workflows-server
        depends_on:
            - mender-mongo-2
            - mender-nats-2
        labels:
            mender.healthcheck.path: "/health"
        command: server --automigrate

    #
    # mender-workflows-worker
    #
    mender-workflows-worker-2:
        image: registry.mender.io/mendersoftware/workflows-enterprise-worker:staging
        command: worker --automigrate --excluded-workflows generate_artifact,generate_delta_artifact
        environment:
            WORKFLOWS_MONGO_URL: mongodb://mender-mongo:27017
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender-failover:
                aliases:
                    - mender-workflows-worker
        depends_on:
            - mender-mongo-2
            - mender-nats-2

    #
    # mender-create-artifact-worker
    #
    mender-create-artifact-worker-2:
        image: mendersoftware/create-artifact-worker:staging
        extends:
            file: common.yml
            service: mender-base
        environment:
            - WORKFLOWS_MONGO_URL=mongodb://mender-mongo:27017
            - CREATE_ARTIFACT_GATEWAY_URL=https://mender-api-gateway
            - CREATE_ARTIFACT_DEPLOYMENTS_URL=http://mender-deployments:8080
            - CREATE_ARTIFACT_SKIPVERIFY=1
        networks:
            mender-failover:
                aliases:
                    - mender-create-artifact-worker
        depends_on:
            - mender-mongo-2
            - mender-nats-2
        command: --automigrate

    mender-mongo-2:
        image: mongo:4.4
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender-failover:
                aliases:
                    - mongo-tenantadm
                    - mongo-deployments
                    - mongo-device-auth
                    - mongo-inventory
                    - mongo-useradm
                    - mongo-workflows
                    - mender-mongo

    mender-nats-2:
        image: nats:2.6-alpine
        command: -js
        networks:
            mender-failover:
                aliases:
                    - mender-nats

    #
    # minio
    #
    minio-2:
        # DO NOT upgrade this to any version "2021.05" or later.
        # We want to stay on Apache license for now.
        image: minio/minio:RELEASE.2019-04-23T23-50-36Z
        restart: on-failure
        networks:
            mender-failover:
                aliases:
                    - minio.s3.docker.mender.io
                    - minio
        environment:
            MINIO_HTTP_TRACE: /dev/stdout
            MINIO_ACCESS_KEY: minio
            MINIO_SECRET_KEY: minio123
        command: server /export

networks:
    mender-failover:
