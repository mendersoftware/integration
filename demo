#!/bin/bash
set -e

usage() {
    cat <<EOF
$(basename $0) [options] docker-options

--client
	Enable emulated client. To enable more than one client, you can use:
	  $(basename $0) --client scale mender-client=2

All other arguments passed to this command are passed directly to
docker-compose, if you want to run the demo, run:

'$(basename $0) up'
EOF
}

if [ "$#" -eq 0 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    usage
    exit 1
fi

CLIENT=
CLIENT_ARGS="-f docker-compose.client.yml"
while [ -n "$1" ]; do
    if [ "$1" = "--no-client" ]; then
        echo "--no-client argument is deprecated. Client is now disabled by default and can be enabled with --client"
    elif [ "$1" = "--client" ]; then
        CLIENT="$CLIENT_ARGS"
        echo "-- enabling client container"
    elif [ "$1" = "--kvm" ]; then
        echo "--kvm argument is deprecated. KVM will be enabled automatically if available"
    elif [ "$1" = "down" ] || [ "$1" = "rm" ]; then
        # If the argument is either "down" or "rm", enable the client so that it
        # gets cleaned up, no matter if `--client` is passed or not.
        CLIENT="$CLIENT_ARGS"
        # Not a flag, so we should break out of the loop.
        break
    else
        break
    fi
    shift
done

# Check if the demo-artifact has been downloaded,
# or if there exists a newer one in the s3-storage.
DEMO_ARTIFACT_NAME="core-image-full-cmdline-qemux86-64.mender"
# wget -q --timestamping file://home/olepor/yocto/qemu-setup/build/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64.mender

ARTIFACT_SIZE_BYTES=$(ls -l ${DEMO_ARTIFACT_NAME} | awk '{print $5}')

# speed up first start by pulling containers in parallel
docker images | grep -q 'mendersoftware/deployments'

if [[ "$?" -eq 1 ]]; then
    compose_args=""
    docker_compose_output=$(docker-compose pull -h)

    # If --no-parallel option exists, it means that docker-compose is
    # running a version where --parallel is default and will warn about
    # deprecated option if used.
    #
    # This behavior was changed in version docker-compose 1.21.0
    echo "$docker_compose_output" | grep -q -- '--no-parallel'
    if [[ "$?" -eq 1 ]]; then
        compose_args = "--parallel"
    fi

    docker-compose pull ${compose_args}
fi

if [[ "$1" == "up" ]]; then
    echo "Starting Mender demo environment.."
fi

# Pass this value on to the GUI container as an env variable
export INTEGRATION_VERSION=$(git describe --tags --abbrev=0)

exec docker-compose \
     -f docker-compose.yml \
     -f docker-compose.storage.minio.yml \
     -f docker-compose.demo.yml \
     $CLIENT \
     "$@" &

DC_PID=$!

MENDER_SERVER_USER='myusername@example.com:mysecretpassword'
MENDER_SERVER_URI='https://localhost'
# Block until the useradm service returns an HTTP response.
echo "Blocking until the useradm service is up!"
curl -k -X POST -u $MENDER_SERVER_USER\
     --retry-connrefused\
     --retry 60\
     --retry-delay 10\
     --retry-max-time 120\
     $MENDER_SERVER_URI/api/management/v1/useradm/auth/login

echo
echo "Creating a new user."
# Create a new user.
docker exec integration_mender-useradm_1 /usr/bin/useradm create-user --username=myusername@example.com --password=mysecretpassword

echo "New user created!"

echo "Getting JWT Token"

JWT=$(curl -k -X POST -u $MENDER_SERVER_USER\
           --retry-connrefused\
           --retry 60\
           --retry-delay 10\
           --retry-max-time 120\
           $MENDER_SERVER_URI/api/management/v1/useradm/auth/login)

# CURL_JWT_PID=$!

echo "Received a JWT token from the server: Token: " ${JWT}


curl -k --request POST\
     --retry-connrefused\
     --retry-delay 10\
     --retry 60 \
     --retry-max-time 120\
     --header "Authorization: Bearer ${JWT}"\
     --form "size=${ARTIFACT_SIZE_BYTES}"\
     --form "artifact=@${DEMO_ARTIFACT_NAME}"\
     "${MENDER_SERVER_URI}/api/management/v1/deployments/artifacts"

echo "Demo Artifact was successfully uploaded to the server"

# CURL_PID=$!

# wait ${CURL_PID}
# wait ${CURL_JWT_PID}
wait ${DC_PID}
