version: '2.1'
services:

    mender-useradm:
        command: server --automigrate
        volumes:
            - ./keys/useradm/private.key:/etc/useradm/rsa/private.pem

    mender-device-auth:
        command: server --automigrate
        volumes:
            - ./keys/deviceauth/private.key:/etc/deviceauth/rsa/private.pem

    mender-inventory:
        command: server --automigrate

    mender-api-gateway:
        ports:
            - 80:80
            - 443:443
            - 8080:8080
        command: 
            - --api.dashboard=true
            - --api.insecure=true
            - --accesslog=true
            - --log.level=DEBUG
            - --providers.file.filename=/config/tls.toml
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.http.address=:80
            - --entrypoints.https.address=:443
            - --entryPoints.https.transport.respondingTimeouts.idleTimeout=7200
            - --entryPoints.https.transport.respondingTimeouts.readTimeout=7200
            - --entryPoints.https.transport.respondingTimeouts.writeTimeout=7200
            - --entrypoints.http.http.redirections.entryPoint.to=https
            - --entrypoints.http.http.redirections.entryPoint.scheme=https
        networks:
            mender:
                aliases:
                    - docker.mender.io
                    - s3.docker.mender.io
        volumes:
            - ./tls.toml:/config/tls.toml
            - ./certs/api-gateway/cert.crt:/certs/cert.crt
            - ./certs/api-gateway/private.key:/certs/private.key
            - ./certs/storage-proxy/cert.crt:/certs/s3.docker.mender.io.crt
            - ./certs/storage-proxy/private.key:/certs/s3.docker.mender.io.key

    mender-deployments:
        command: server --automigrate
        volumes:
            - ./certs/storage-proxy/cert.crt:/etc/ssl/certs/s3.docker.mender.io.crt
        environment:
            STORAGE_BACKEND_CERT: /etc/ssl/certs/s3.docker.mender.io.crt
            DEPLOYMENTS_AWS_AUTH_KEY: minio
            DEPLOYMENTS_AWS_AUTH_SECRET: minio123
            DEPLOYMENTS_AWS_URI: https://s3.docker.mender.io
        depends_on:
            - mender-mongo
            - minio

    minio:
        networks:
            mender:
                aliases:
                    - minio.s3.docker.mender.io
        environment:
            MINIO_ACCESS_KEY: minio
            MINIO_SECRET_KEY: minio123
        # use rate limiting, for more options see: https://docs.traefik.io/v2.2/middlewares/ratelimit/
        # labels:
        #     - traefik.http.middlewares.demo-ratelimit.ratelimit.average=30
        #     - traefik.http.routers.minio.middlewares=demo-ratelimit

    mender-gui:
        environment:
            # enable demo mode for UI ["true"/"false"]
            DEMO: "true"
        labels:
            - traefik.http.middlewares.sec-headers.headers.stsSeconds=0
            - traefik.http.middlewares.sec-headers.headers.isDevelopment=true

    mender-workflows-server:
        command: server --automigrate

    mender-workflows-worker:
        command: worker --automigrate --excluded-workflows generate_artifact

    mender-create-artifact-worker:
        command: --automigrate
        environment:
            - CREATE_ARTIFACT_SKIPVERIFY=1
