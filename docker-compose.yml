version: '2.1'
services:

    #
    # mender-deployments
    #
    mender-deployments:
        image: mendersoftware/deployments:mender-master
        extends:
            file: common.yml
            service: mender-base
        labels:
            - traefik.enable=true
            - traefik.http.routers.deployments.entrypoints=https
            - traefik.http.routers.deployments.rule=PathPrefix(`/api/devices/{(v[0-9]+)}/deployments`)
            - traefik.http.routers.deployments.middlewares=devauth,sec-headers,json-error-responder1,json-error-responder2,json-error-responder3,json-error-responder4
            - traefik.http.routers.deployments.tls=true
            - traefik.http.routers.deployments.service=deployments
            - traefik.http.services.deployments.loadbalancer.server.port=8080
            
            - traefik.http.routers.deploymentsMgmt.entrypoints=https
            - traefik.http.routers.deploymentsMgmt.rule=PathPrefix(`/api/management/{(v[0-9]+)}/deployments`)
            - traefik.http.routers.deploymentsMgmt.middlewares=userauth,sec-headers,json-error-responder1,json-error-responder2,json-error-responder3,json-error-responder4
            - traefik.http.routers.deploymentsMgmt.tls=true
            - traefik.http.routers.deploymentsMgmt.service=deploymentsMgmt
            - traefik.http.services.deploymentsMgmt.loadbalancer.server.port=8080
        networks:
            - mender
        depends_on:
            - mender-mongo

    #
    # mender-gui
    #
    mender-gui:
        image: mendersoftware/gui:mender-master
        extends:
            file: common.yml
            service: mender-base
        labels:
            - traefik.enable=true
            - traefik.http.routers.gui.entrypoints=https
            - traefik.http.routers.gui.middlewares=ensure-ui-path,signup-redirect,ui-stripprefix,sec-headers,json-error-responder1,json-error-responder2,json-error-responder3,json-error-responder4
            - traefik.http.routers.gui.rule=PathPrefix(`/`)
            - traefik.http.routers.gui.service=gui
            - traefik.http.routers.gui.tls=true
            - traefik.http.services.gui.loadbalancer.server.port=80
            
            - traefik.http.routers.error-responder.entrypoints=https,http
            # - traefik.http.routers.error-responder.rule=HostRegexp(`{host:.+}`)
            - traefik.http.routers.error-responder.service=error-responder
            - traefik.http.routers.error-responder.tls=true
            - traefik.http.services.error-responder.loadbalancer.server.port=8080

            - traefik.http.middlewares.ui-stripprefix.stripprefix.prefixes=/ui
            - traefik.http.middlewares.ensure-ui-path.redirectregex.regex=^(https?://[^/]+)(/[a-z]*)?$$
            - traefik.http.middlewares.ensure-ui-path.redirectregex.replacement=$${1}/ui/
            - traefik.http.middlewares.ensure-ui-path.redirectregex.permanent=true
            - traefik.http.middlewares.signup-redirect.redirectregex.regex=^(https://[^/]+)/signup
            - traefik.http.middlewares.signup-redirect.redirectregex.replacement=$${1}/ui/#/signup
            # definitions of shared middlewares
            - traefik.http.middlewares.sec-headers.headers.referrerPolicy=no-referrer
            - traefik.http.middlewares.sec-headers.headers.stsSeconds=31536000
            - traefik.http.middlewares.sec-headers.headers.forceSTSHeader=true
            - traefik.http.middlewares.sec-headers.headers.stsPreload=true
            - traefik.http.middlewares.sec-headers.headers.stsIncludeSubdomains=true
            - traefik.http.middlewares.sec-headers.headers.browserXssFilter=true
            - traefik.http.middlewares.sec-headers.headers.customRequestHeaders.X-Forwarded-Proto=https
            - traefik.http.middlewares.devauth.forwardAuth.address=http://mender-device-auth:8080/api/internal/v1/devauth/tokens/verify
            - traefik.http.middlewares.devauth.forwardAuth.authResponseHeaders=X-MEN-RequestID
            - traefik.http.middlewares.userauth.forwardAuth.address=http://mender-useradm:8080/api/internal/v1/useradm/auth/verify
            - traefik.http.middlewares.userauth.forwardAuth.authResponseHeaders=X-MEN-RequestID,X-MEN-RBAC-Inventory-Groups,X-MEN-RBAC-Deployments-Groups
            # errorhandling 
            - traefik.http.middlewares.json-error-responder1.errors.service=error-responder
            - traefik.http.middlewares.json-error-responder1.errors.query=/{status}.json
            - traefik.http.middlewares.json-error-responder1.errors.status=401-404
            - traefik.http.middlewares.json-error-responder2.errors.service=error-responder
            - traefik.http.middlewares.json-error-responder2.errors.query=/{status}.json
            - traefik.http.middlewares.json-error-responder2.errors.status=500-504
            - traefik.http.middlewares.json-error-responder3.errors.service=error-responder
            - traefik.http.middlewares.json-error-responder3.errors.query=/{status}.json
            - traefik.http.middlewares.json-error-responder3.errors.status=408
            - traefik.http.middlewares.json-error-responder4.errors.service=error-responder
            - traefik.http.middlewares.json-error-responder4.errors.query=/{status}.json
            - traefik.http.middlewares.json-error-responder4.errors.status=429
        networks:
            - mender
        environment:
            - GATEWAY_IP
            - INTEGRATION_VERSION
            - MENDER_ARTIFACT_VERSION
            - MENDER_VERSION
            - MENDER_DEB_PACKAGE_VERSION

    #
    # mender-api-gateway
    #
    mender-api-gateway:
        image: traefik:v2.2
        extends:
            file: common.yml
            service: mender-base
        # Enables the web UI and tells Traefik to listen to docker
        command: 
            - --accesslog=true
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.http.address=:80
            - --entrypoints.https.address=:443
            - --entryPoints.https.transport.respondingTimeouts.idleTimeout=7200
            - --entryPoints.https.transport.respondingTimeouts.readTimeout=7200
            - --entryPoints.https.transport.respondingTimeouts.writeTimeout=7200
            - --entrypoints.http.http.redirections.entryPoint.to=https
            - --entrypoints.http.http.redirections.entryPoint.scheme=https
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
            - mender
        # critical - otherwise nginx may not detect
        # these servers and exits with 'upstream server not found'
        depends_on:
            - mender-device-auth
            - mender-deployments
            - mender-gui
            - mender-useradm
            - mender-inventory

    #
    # mender-device-auth
    #
    mender-device-auth:
        image: mendersoftware/deviceauth:mender-master
        environment:
            DEVICEAUTH_ORCHESTRATOR_ADDR: http://mender-workflows-server:8080/
        extends:
            file: common.yml
            service: mender-base
        labels:
            - traefik.enable=true
            - traefik.http.routers.deviceauth.entrypoints=https
            - traefik.http.routers.deviceauth.rule=PathPrefix(`/api/devices/{(v[0-9]+)}/authentication`)
            - traefik.http.routers.deviceauth.tls=true
            - traefik.http.routers.deviceauth.service=deviceauth
            - traefik.http.services.deviceauth.loadbalancer.server.port=8080
            
            - traefik.http.routers.deviceauthMgmt.entrypoints=https
            - traefik.http.routers.deviceauthMgmt.rule=PathPrefix(`/api/management/{(v[0-9]+)}/devauth`)
            - traefik.http.routers.deviceauthMgmt.middlewares=userauth,sec-headers,json-error-responder1,json-error-responder2,json-error-responder3,json-error-responder4
            - traefik.http.routers.deviceauthMgmt.tls=true
            - traefik.http.routers.deviceauthMgmt.service=deviceauthMgmt
            - traefik.http.services.deviceauthMgmt.loadbalancer.server.port=8080
            # the X-Original-URI and X-Original-Method headers are added by traefik automatically, however as X-Forwarded-Uri and X-Forwarded-Method
            # https://github.com/containous/traefik/blob/125470f1106373ff42cf03ae28467055a8186de5/pkg/middlewares/forwardedheaders/forwarded_header.go#L12-L38
        networks:
            - mender
        depends_on:
            - mender-mongo
            - mender-workflows-server

    #
    # mender-inventory
    #
    mender-inventory:
        image: mendersoftware/inventory:mender-master
        extends:
            file: common.yml
            service: mender-base
        labels:
            - traefik.enable=true
            - traefik.http.routers.newInventory.entrypoints=https
            - traefik.http.routers.newInventory.rule=PathPrefix(`/api/management/v2/inventory`)
            - traefik.http.routers.newInventory.service=newInventory
            - traefik.http.routers.newInventory.middlewares=userauth,sec-headers,json-error-responder1,json-error-responder2,json-error-responder3,json-error-responder4
            - traefik.http.routers.newInventory.tls=true
            - traefik.http.services.newInventory.loadbalancer.server.port=8080

            - traefik.http.middlewares.oldInventory-replacepathregex.replacepathregex.regex=^/api/management/v1/inventory/(.*)
            - traefik.http.middlewares.oldInventory-replacepathregex.replacepathregex.replacement=/api/0.1.0/$$1
            - traefik.http.routers.oldInventory.entrypoints=https
            - traefik.http.routers.oldInventory.middlewares=userauth,oldInventory-replacepathregex,sec-headers,json-error-responder1,json-error-responder2,json-error-responder3,json-error-responder4
            - traefik.http.routers.oldInventory.rule=PathPrefix(`/api/management/v1/inventory`)
            - traefik.http.routers.oldInventory.service=oldInventory
            - traefik.http.routers.oldInventory.tls=true
            - traefik.http.services.oldInventory.loadbalancer.server.port=8080

            - traefik.http.middlewares.oldDeviceInventory-replacepathregex.replacepathregex.regex=^/api/devices/v1/inventory/(.*)
            - traefik.http.middlewares.oldDeviceInventory-replacepathregex.replacepathregex.replacement=/api/0.1.0/attributes
            - traefik.http.routers.oldDeviceInventory.entrypoints=https
            - traefik.http.routers.oldDeviceInventory.middlewares=devauth,oldDeviceInventory-replacepathregex,sec-headers,json-error-responder1,json-error-responder2,json-error-responder3,json-error-responder4
            - traefik.http.routers.oldDeviceInventory.rule=PathPrefix(`/api/devices/v1/inventory`)
            - traefik.http.routers.oldDeviceInventory.service=oldDeviceInventory
            - traefik.http.routers.oldDeviceInventory.tls=true
            - traefik.http.services.oldDeviceInventory.loadbalancer.server.port=8080
        networks:
            - mender
        depends_on:
            - mender-mongo

    #
    # mender-useradm
    #
    mender-useradm:
        image: mendersoftware/useradm:mender-master
        extends:
            file: common.yml
            service: mender-base
        labels:
            - traefik.enable=true
            - traefik.http.routers.useradm.entrypoints=https
            - traefik.http.routers.useradm.middlewares=userauth,sec-headers,json-error-responder1,json-error-responder2,json-error-responder3,json-error-responder4
            - traefik.http.routers.useradm.rule=PathPrefix(`/api/management/{(v[0-9]+)}/useradm`)
            - traefik.http.routers.useradm.tls=true
            - traefik.http.routers.useradm.service=useradm
            - traefik.http.services.useradm.loadbalancer.server.port=8080

            - traefik.http.routers.useradmLogin.entrypoints=https
            - traefik.http.routers.useradmLogin.rule=Path(`/api/management/{(v[0-9]+)}/useradm/auth/login`)||PathPrefix(`/api/management/{(v[0-9]+)}/useradm/(oauth2|auth/password-reset)`)
            # traefik should automatically forward the x-forwarded-host header
            - traefik.http.routers.useradmLogin.middlewares=sec-headers,json-error-responder1,json-error-responder2,json-error-responder3,json-error-responder4
            - traefik.http.routers.useradmLogin.tls=true
            - traefik.http.routers.useradmLogin.service=useradmLogin
            - traefik.http.services.useradmLogin.loadbalancer.server.port=8080
        networks:
            - mender
        depends_on:
            - mender-mongo

    #
    # mender-workflows-server
    #
    mender-workflows-server:
        image: mendersoftware/workflows:mender-master
        environment:
            WORKFLOWS_MONGO_URL: mongodb://mender-mongo:27017
        extends:
            file: common.yml
            service: mender-base
        networks:
            - mender
        depends_on:
            - mender-mongo

    #
    # mender-workflows-worker
    #
    mender-workflows-worker:
        image: mendersoftware/workflows-worker:mender-master
        command: worker --excluded-workflows generate_artifact
        environment:
            WORKFLOWS_MONGO_URL: mongodb://mender-mongo:27017
        extends:
            file: common.yml
            service: mender-base
        networks:
            - mender
        depends_on:
            - mender-mongo

    #
    # mender-create-artifact-worker
    #
    mender-create-artifact-worker:
        image: mendersoftware/create-artifact-worker:mender-master
        extends:
            file: common.yml
            service: mender-base
        environment:
            - WORKFLOWS_MONGO_URL=mongodb://mender-mongo:27017
            - CREATE_ARTIFACT_GATEWAY_URL=https://mender-api-gateway
            - CREATE_ARTIFACT_DEPLOYMENTS_URL=http://mender-deployments:8080
        networks:
            - mender
        depends_on:
            - mender-mongo

    mender-mongo:
        image: mongo:4.4
        extends:
            file: common.yml
            service: mender-base
        networks:
            mender:
                aliases:
                    - mongo-tenantadm
                    - mongo-deployments
                    - mongo-device-auth
                    - mongo-inventory
                    - mongo-useradm
                    - mongo-workflows

networks:
    mender:
